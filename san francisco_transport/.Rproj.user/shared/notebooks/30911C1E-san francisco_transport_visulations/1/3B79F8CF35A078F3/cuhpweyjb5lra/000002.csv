"0","#data2$year<-as.numeric(data2$date)$year+1900)"
"0","# the month too "
"0","#data2$month<-as.numeric(as.POSIXlt(data2$date)$mon+1)"
"0","# but turn months into ordered facors to control the appearance/ordering in the presentation"
"0","#dat$monthf<-factor(dat$month,levels=as.character(1:12),labels=c(""Jan"",""Feb"",""Mar"",""Apr"",""May"",""Jun"",""Jul"",""Aug"",""Sep"",""Oct"",""Nov"",""Dec""),ordered=TRUE)"
"0","# the day of week is again easily found"
"0","#dat$weekday = as.POSIXlt(dat$date)$wday"
"0","# again turn into factors to control appearance/abbreviation and ordering"
"0","# I use the reverse function rev here to order the week top down in the graph"
"0","# you can cut it out to reverse week order"
"0","#dat$weekdayf<-factor(dat$weekday,levels=rev(1:7),labels=rev(c(""Mon"",""Tue"",""Wed"",""Thu"",""Fri"",""Sat"",""Sun"")),ordered=TRUE)"
"0","# the monthweek part is a bit trickier "
"0","# first a factor which cuts the data into month chunks"
"0","#dat$yearmonth<-as.yearmon(dat$date)"
"0","#dat$yearmonthf<-factor(dat$yearmonth)"
"0","# then find the ""week of year"" for each day"
"0","#dat$week <- as.numeric(format(dat$date,""%W""))"
"0","# and now for each monthblock we normalize the week to start at 1 "
"0","#dat<-ddply(dat,.(yearmonthf),transform,monthweek=1+week-min(week))"
"0","#CHECK DATASET"
"0","#head(dat)"
